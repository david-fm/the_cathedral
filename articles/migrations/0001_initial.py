# Generated by Django 4.2.1 on 2023-05-24 20:28

import articles.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPersonalized',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('biography', models.TextField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=articles.models.user_directory_path_User)),
                ('website', models.TextField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlockQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.FloatField(default=0.0)),
                ('name', models.TextField(max_length=250)),
                ('is_formal', models.BooleanField(default=False)),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockquiz')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Font',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('font_path', models.FileField(upload_to=articles.models.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(max_length=350)),
                ('quiz_block_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.blockquiz')),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=50)),
                ('pub_date', models.DateTimeField(verbose_name='date and time when the publication was published')),
                ('max_size', models.IntegerField()),
                ('pdf_version', models.FileField(blank=True, null=True, upload_to=articles.models.user_directory_path)),
                ('html_version', models.FileField(upload_to=articles.models.user_directory_path)),
                ('checks', models.ManyToManyField(related_name='checks', to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to=settings.AUTH_USER_MODEL)),
                ('rates', models.ManyToManyField(related_name='rates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.TextField(max_length=255)),
                ('publications', models.ManyToManyField(to='articles.publication')),
            ],
        ),
        migrations.CreateModel(
            name='BlockVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.FloatField(default=0.0)),
                ('name', models.CharField(max_length=50)),
                ('duration', models.IntegerField()),
                ('url', models.TextField(max_length=250)),
                ('is_formal', models.BooleanField(default=False)),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockvideo')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('title', models.CharField(max_length=255)),
                ('font_size', models.FloatField()),
                ('font', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.font')),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blocktitle')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('text', models.TextField(blank=True, max_length=3500, null=True)),
                ('font_size', models.FloatField(blank=True, null=True)),
                ('font', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.font')),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blocktext')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('text', models.TextField(max_length=3500)),
                ('font_size', models.FloatField()),
                ('font', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.font')),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blocktable')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockReferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('title', models.CharField(max_length=255)),
                ('authors', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockreferences')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blockquiz',
            name='publication_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication'),
        ),
        migrations.CreateModel(
            name='BlockImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('file_path', models.FileField(upload_to=articles.models.user_directory_path)),
                ('name', models.TextField(max_length=255)),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockimage')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockDoi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('doi', models.CharField(max_length=255)),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockdoi')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockAuthors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_formal', models.BooleanField(default=True)),
                ('size', models.FloatField(default=0.0)),
                ('url_authors', models.TextField(max_length=250)),
                ('next_block_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='articles.blockauthors')),
                ('publication_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.publication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.blockauthors')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='articles.questions')),
            ],
        ),
    ]
